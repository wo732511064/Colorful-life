{"version":3,"sources":["webpack:///./node_modules/classlist-polyfill/src/index.js"],"names":["window","self","document","createElement","createElementNS","view","elemCtrProto","Element","objCtr","Object","strTrim","String","trim","this","replace","arrIndexOf","Array","indexOf","item","i","len","length","DOMEx","type","message","name","code","DOMException","checkTokenAndGetIndex","classList","token","test","call","ClassList","elem","trimmedClasses","getAttribute","classes","split","push","_updateClassName","setAttribute","toString","classListProto","classListGetter","Error","contains","add","tokens","arguments","l","updated","remove","index","splice","toggle","force","result","method","join","defineProperty","classListPropDesc","get","enumerable","configurable","ex","undefined","number","__defineGetter__","testElement","createMethod","original","DOMTokenList","prototype","_toggle"],"mappings":"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","file":"2.8169adb7497789cec6a8.chunk.js","sourcesContent":["/*\n * classList.js: Cross-browser full element.classList implementation.\n * 1.1.20170427\n *\n * By Eli Grey, http://eligrey.com\n * License: Dedicated to the public domain.\n *   See https://github.com/eligrey/classList.js/blob/master/LICENSE.md\n */\n\n/*global self, document, DOMException */\n\n/*! @source http://purl.eligrey.com/github/classList.js/blob/master/classList.js */\n\nif (\"document\" in window.self) {\n\n// Full polyfill for browsers with no classList support\n// Including IE < Edge missing SVGElement.classList\nif (!(\"classList\" in document.createElement(\"_\")) \n\t|| document.createElementNS && !(\"classList\" in document.createElementNS(\"http://www.w3.org/2000/svg\",\"g\"))) {\n\n(function (view) {\n\n\"use strict\";\n\nif (!('Element' in view)) return;\n\nvar\n\t  classListProp = \"classList\"\n\t, protoProp = \"prototype\"\n\t, elemCtrProto = view.Element[protoProp]\n\t, objCtr = Object\n\t, strTrim = String[protoProp].trim || function () {\n\t\treturn this.replace(/^\\s+|\\s+$/g, \"\");\n\t}\n\t, arrIndexOf = Array[protoProp].indexOf || function (item) {\n\t\tvar\n\t\t\t  i = 0\n\t\t\t, len = this.length\n\t\t;\n\t\tfor (; i < len; i++) {\n\t\t\tif (i in this && this[i] === item) {\n\t\t\t\treturn i;\n\t\t\t}\n\t\t}\n\t\treturn -1;\n\t}\n\t// Vendors: please allow content code to instantiate DOMExceptions\n\t, DOMEx = function (type, message) {\n\t\tthis.name = type;\n\t\tthis.code = DOMException[type];\n\t\tthis.message = message;\n\t}\n\t, checkTokenAndGetIndex = function (classList, token) {\n\t\tif (token === \"\") {\n\t\t\tthrow new DOMEx(\n\t\t\t\t  \"SYNTAX_ERR\"\n\t\t\t\t, \"An invalid or illegal string was specified\"\n\t\t\t);\n\t\t}\n\t\tif (/\\s/.test(token)) {\n\t\t\tthrow new DOMEx(\n\t\t\t\t  \"INVALID_CHARACTER_ERR\"\n\t\t\t\t, \"String contains an invalid character\"\n\t\t\t);\n\t\t}\n\t\treturn arrIndexOf.call(classList, token);\n\t}\n\t, ClassList = function (elem) {\n\t\tvar\n\t\t\t  trimmedClasses = strTrim.call(elem.getAttribute(\"class\") || \"\")\n\t\t\t, classes = trimmedClasses ? trimmedClasses.split(/\\s+/) : []\n\t\t\t, i = 0\n\t\t\t, len = classes.length\n\t\t;\n\t\tfor (; i < len; i++) {\n\t\t\tthis.push(classes[i]);\n\t\t}\n\t\tthis._updateClassName = function () {\n\t\t\telem.setAttribute(\"class\", this.toString());\n\t\t};\n\t}\n\t, classListProto = ClassList[protoProp] = []\n\t, classListGetter = function () {\n\t\treturn new ClassList(this);\n\t}\n;\n// Most DOMException implementations don't allow calling DOMException's toString()\n// on non-DOMExceptions. Error's toString() is sufficient here.\nDOMEx[protoProp] = Error[protoProp];\nclassListProto.item = function (i) {\n\treturn this[i] || null;\n};\nclassListProto.contains = function (token) {\n\ttoken += \"\";\n\treturn checkTokenAndGetIndex(this, token) !== -1;\n};\nclassListProto.add = function () {\n\tvar\n\t\t  tokens = arguments\n\t\t, i = 0\n\t\t, l = tokens.length\n\t\t, token\n\t\t, updated = false\n\t;\n\tdo {\n\t\ttoken = tokens[i] + \"\";\n\t\tif (checkTokenAndGetIndex(this, token) === -1) {\n\t\t\tthis.push(token);\n\t\t\tupdated = true;\n\t\t}\n\t}\n\twhile (++i < l);\n\n\tif (updated) {\n\t\tthis._updateClassName();\n\t}\n};\nclassListProto.remove = function () {\n\tvar\n\t\t  tokens = arguments\n\t\t, i = 0\n\t\t, l = tokens.length\n\t\t, token\n\t\t, updated = false\n\t\t, index\n\t;\n\tdo {\n\t\ttoken = tokens[i] + \"\";\n\t\tindex = checkTokenAndGetIndex(this, token);\n\t\twhile (index !== -1) {\n\t\t\tthis.splice(index, 1);\n\t\t\tupdated = true;\n\t\t\tindex = checkTokenAndGetIndex(this, token);\n\t\t}\n\t}\n\twhile (++i < l);\n\n\tif (updated) {\n\t\tthis._updateClassName();\n\t}\n};\nclassListProto.toggle = function (token, force) {\n\ttoken += \"\";\n\n\tvar\n\t\t  result = this.contains(token)\n\t\t, method = result ?\n\t\t\tforce !== true && \"remove\"\n\t\t:\n\t\t\tforce !== false && \"add\"\n\t;\n\n\tif (method) {\n\t\tthis[method](token);\n\t}\n\n\tif (force === true || force === false) {\n\t\treturn force;\n\t} else {\n\t\treturn !result;\n\t}\n};\nclassListProto.toString = function () {\n\treturn this.join(\" \");\n};\n\nif (objCtr.defineProperty) {\n\tvar classListPropDesc = {\n\t\t  get: classListGetter\n\t\t, enumerable: true\n\t\t, configurable: true\n\t};\n\ttry {\n\t\tobjCtr.defineProperty(elemCtrProto, classListProp, classListPropDesc);\n\t} catch (ex) { // IE 8 doesn't support enumerable:true\n\t\t// adding undefined to fight this issue https://github.com/eligrey/classList.js/issues/36\n\t\t// modernie IE8-MSW7 machine has IE8 8.0.6001.18702 and is affected\n\t\tif (ex.number === undefined || ex.number === -0x7FF5EC54) {\n\t\t\tclassListPropDesc.enumerable = false;\n\t\t\tobjCtr.defineProperty(elemCtrProto, classListProp, classListPropDesc);\n\t\t}\n\t}\n} else if (objCtr[protoProp].__defineGetter__) {\n\telemCtrProto.__defineGetter__(classListProp, classListGetter);\n}\n\n}(window.self));\n\n}\n\n// There is full or partial native classList support, so just check if we need\n// to normalize the add/remove and toggle APIs.\n\n(function () {\n\t\"use strict\";\n\n\tvar testElement = document.createElement(\"_\");\n\n\ttestElement.classList.add(\"c1\", \"c2\");\n\n\t// Polyfill for IE 10/11 and Firefox <26, where classList.add and\n\t// classList.remove exist but support only one argument at a time.\n\tif (!testElement.classList.contains(\"c2\")) {\n\t\tvar createMethod = function(method) {\n\t\t\tvar original = DOMTokenList.prototype[method];\n\n\t\t\tDOMTokenList.prototype[method] = function(token) {\n\t\t\t\tvar i, len = arguments.length;\n\n\t\t\t\tfor (i = 0; i < len; i++) {\n\t\t\t\t\ttoken = arguments[i];\n\t\t\t\t\toriginal.call(this, token);\n\t\t\t\t}\n\t\t\t};\n\t\t};\n\t\tcreateMethod('add');\n\t\tcreateMethod('remove');\n\t}\n\n\ttestElement.classList.toggle(\"c3\", false);\n\n\t// Polyfill for IE 10 and Firefox <24, where classList.toggle does not\n\t// support the second argument.\n\tif (testElement.classList.contains(\"c3\")) {\n\t\tvar _toggle = DOMTokenList.prototype.toggle;\n\n\t\tDOMTokenList.prototype.toggle = function(token, force) {\n\t\t\tif (1 in arguments && !this.contains(token) === !force) {\n\t\t\t\treturn force;\n\t\t\t} else {\n\t\t\t\treturn _toggle.call(this, token);\n\t\t\t}\n\t\t};\n\n\t}\n\n\ttestElement = null;\n}());\n\n}\n"],"sourceRoot":""}